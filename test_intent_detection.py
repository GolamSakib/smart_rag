#!/usr/bin/env python3
"""
Test script for intent detection system
"""

from services.intent_detector import intent_detector, IntentType

def test_intent_detection():
    """Test various user messages to verify intent detection"""
    
    test_cases = [
        # Greeting cases
        ("‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ", IntentType.GREETING),
        ("‡¶π‡¶æ‡¶á", IntentType.GREETING),
        ("hello", IntentType.GREETING),
        
        # Product search cases
        ("‡¶ú‡ßÅ‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.PRODUCT_SEARCH),
        ("‡¶ï‡ßã‡¶® ‡¶ú‡ßÅ‡¶§‡¶æ ‡¶Ü‡¶õ‡ßá?", IntentType.PRODUCT_SEARCH),
        ("‡¶®‡¶§‡ßÅ‡¶® ‡¶ú‡ßÅ‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.PRODUCT_SEARCH),
        ("‡¶∏‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.PRODUCT_SEARCH),
        ("‡¶ï‡ßã‡¶® ‡¶∞‡¶ô‡ßá‡¶∞ ‡¶ú‡ßÅ‡¶§‡¶æ ‡¶Ü‡¶õ‡ßá?", IntentType.PRODUCT_SEARCH),
        
        # Price inquiry cases
        ("‡¶¶‡¶æ‡¶Æ ‡¶ï‡¶§?", IntentType.PRICE_INQUIRY),
        ("pp", IntentType.PRICE_INQUIRY),
        ("‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶ú‡¶æ‡¶®‡¶æ‡¶®", IntentType.PRICE_INQUIRY),
        ("‡¶ï‡¶§ ‡¶ü‡¶æ‡¶ï‡¶æ?", IntentType.PRICE_INQUIRY),
        
        # Order inquiry cases
        ("‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á", IntentType.ORDER_INQUIRY),
        ("‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶ø‡¶®‡¶¨?", IntentType.ORDER_INQUIRY),
        ("‡¶™‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá?", IntentType.ORDER_INQUIRY),
        ("‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ ‡¶ï‡¶∞‡ßÅ‡¶®", IntentType.ORDER_INQUIRY),
        
        # Delivery inquiry cases
        ("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ï‡¶§‡¶¶‡¶ø‡¶®‡ßá?", IntentType.DELIVERY_INQUIRY),
        ("‡¶ï‡¶ñ‡¶® ‡¶™‡¶æ‡¶¨?", IntentType.DELIVERY_INQUIRY),
        ("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú ‡¶ï‡¶§?", IntentType.DELIVERY_INQUIRY),
        
        # Return policy cases
        ("‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡¶≤‡¶ø‡¶∏‡¶ø ‡¶ï‡¶ø?", IntentType.RETURN_POLICY),
        ("‡¶´‡ßá‡¶∞‡¶§ ‡¶®‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨?", IntentType.RETURN_POLICY),
        ("‡¶™‡¶õ‡¶®‡ßç‡¶¶ ‡¶®‡¶æ ‡¶π‡¶≤‡ßá ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶¨?", IntentType.RETURN_POLICY),
        
        # Size chart cases
        ("‡¶∏‡¶æ‡¶á‡¶ú ‡¶ö‡¶æ‡¶∞‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.SIZE_CHART),
        ("‡¶ï‡ßã‡¶® ‡¶∏‡¶æ‡¶á‡¶ú ‡¶®‡¶ø‡¶¨?", IntentType.SIZE_CHART),
        ("‡¶¨‡¶æ‡¶ü‡¶æ ‡¶∏‡¶æ‡¶á‡¶ú ‡¶ú‡¶æ‡¶®‡¶æ‡¶®", IntentType.SIZE_CHART),
        
        # Image request cases
        ("‡¶õ‡¶¨‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.IMAGE_REQUEST),
        ("‡¶ö‡ßã‡¶¨‡¶ø ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®", IntentType.IMAGE_REQUEST),
        ("‡¶ï‡ßá‡¶Æ‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶Ø‡¶º?", IntentType.IMAGE_REQUEST),
        
        # Track order cases
        ("‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®", IntentType.TRACK_ORDER),
        ("‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡ßã‡¶•‡¶æ‡¶Ø‡¶º?", IntentType.TRACK_ORDER),
        ("‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶¶‡¶ø‡¶®", IntentType.TRACK_ORDER),
        
        # Bargaining cases
        ("‡¶¶‡¶æ‡¶Æ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡¶Ø‡¶º?", IntentType.BARGAINING),
        ("‡¶è‡¶ï‡¶ü‡ßÅ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßã", IntentType.BARGAINING),
        ("‡¶Ö‡¶´‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá?", IntentType.BARGAINING),
        
        # General chat cases
        ("‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶", IntentType.GENERAL_CHAT),
        ("‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá", IntentType.GENERAL_CHAT),
        ("", IntentType.GENERAL_CHAT),
    ]
    
    print("Testing Intent Detection System")
    print("=" * 50)
    
    correct_predictions = 0
    total_tests = len(test_cases)
    
    for i, (message, expected_intent) in enumerate(test_cases, 1):
        detected_intent, confidence = intent_detector.detect_intent(message)
        
        is_correct = detected_intent == expected_intent
        if is_correct:
            correct_predictions += 1
        
        status = "‚úÖ PASS" if is_correct else "‚ùå FAIL"
        print(f"{i:2d}. {status} | '{message}' -> {detected_intent.value} (conf: {confidence:.2f}) [Expected: {expected_intent.value}]")
    
    accuracy = (correct_predictions / total_tests) * 100
    print("=" * 50)
    print(f"Accuracy: {correct_predictions}/{total_tests} ({accuracy:.1f}%)")
    
    return accuracy > 80  # Consider test passed if accuracy > 80%

def test_should_search_products():
    """Test the should_search_products function"""
    
    print("\nTesting should_search_products function")
    print("=" * 50)
    
    test_cases = [
        (IntentType.PRODUCT_SEARCH, 0.8, True),   # Should search
        (IntentType.PRICE_INQUIRY, 0.6, True),    # Should search
        (IntentType.ORDER_INQUIRY, 0.5, True),    # Should search
        (IntentType.IMAGE_REQUEST, 0.4, True),    # Should search
        (IntentType.DELIVERY_INQUIRY, 0.8, True), # Should search (high confidence)
        (IntentType.DELIVERY_INQUIRY, 0.5, False), # Should not search (low confidence)
        (IntentType.GREETING, 0.9, False),        # Should not search
        (IntentType.GENERAL_CHAT, 0.1, False),    # Should not search
    ]
    
    correct_predictions = 0
    total_tests = len(test_cases)
    
    for i, (intent, confidence, expected) in enumerate(test_cases, 1):
        result = intent_detector.should_search_products(intent, confidence)
        is_correct = result == expected
        
        if is_correct:
            correct_predictions += 1
        
        status = "‚úÖ PASS" if is_correct else "‚ùå FAIL"
        print(f"{i}. {status} | {intent.value} (conf: {confidence:.1f}) -> {result} [Expected: {expected}]")
    
    accuracy = (correct_predictions / total_tests) * 100
    print("=" * 50)
    print(f"Accuracy: {correct_predictions}/{total_tests} ({accuracy:.1f}%)")
    
    return accuracy == 100  # Should be 100% for this logic test

if __name__ == "__main__":
    print("Intent Detection System Test")
    print("=" * 60)
    
    # Test intent detection
    intent_test_passed = test_intent_detection()
    
    # Test should_search_products logic
    search_test_passed = test_should_search_products()
    
    print("\n" + "=" * 60)
    if intent_test_passed and search_test_passed:
        print("üéâ ALL TESTS PASSED! Intent detection system is working correctly.")
    else:
        print("‚ö†Ô∏è  Some tests failed. Please review the intent detection logic.")
    
    print("=" * 60)
